# Override chart name.
nameOverride: ""

# Override compute chart full name.
fullnameOverride: ""

# Labels to add to Kubernetes objects created by Helm deployment.
labels: {}

# Annotations to add to Kubernetes objects created by Helm deployment.
annotations: {}

terminator:
    defaults:
        drain:
            force: true
            gracePeriodSeconds: -1
            ignoreAllDaemonSets: true
            deleteEmptyDirData: true
            timeoutSeconds: 120

aws:
    # AWS region to use in API calls.
    region: ""

# Global logging configuration.
# See https://github.com/uber-go/zap/blob/2314926ec34c23ee21f3dd4399438469668f8097/config.go#L58-L94
# for descriptions of each option.
logging:
    level: info
    development: false
    disableStacktrace: true
    disableCaller: true
    sampling:
        initial: 100
        thereafter: 100
    outputPaths:
        - stdout
    errorOutputPaths:
        - stderr
    encoding: console
    encoderConfig:
        timeKey: time
        levelKey: level
        nameKey: logger
        callerKey: caller
        messageKey: message
        stacktraceKey: stacktrace
        levelEncoder: capital
        timeEncoder: iso8601

pod:
    # Number of aws-node-termination-handler controller instance pods.
    replicas: 1

    # Update strategy for pods.
    updateStrategy:
        type: Recreate

    # Labels to add to pods.
    labels: {}

    # Annotations to add to pods.
    annotations: {}

    # Security group configuration for pods.
    securityContext:
        fsGroup: 1000

    # Priority class for the pods.
    priorityClassName: "system-cluster-critical"

    # Bind the pod to the host network.
    hostNetwork: false

    # Node labels to match when scheduling pods.
    nodeSelector:
        kubernetes.io/os: linux

# Secret for accessing image.
imagePullSecrets: []

# Policy on when to pull image.
imagePullPolicy: IfNotPresent

rbac:
    # Create the RBAC objects. May fail if RBAC objects already exist.
    create: true

serviceAccount:

    # Create the service account. May fail if service account already exists.
    create: true

    # Name of service account. If empty then a name will be generated.
    name: ""

    # Annotations to add to the service account.
    annotations: {}

controller:
    # Image to deploy.
    image: "public.ecr.aws/aws-node-termination-handler:v2.0.0-0.1"

    # Additional security context configuration for the controller pod.
    securityContext: {}

    # Environment variables.
    env: []
    # Example:
    #   - name: AWS_REGION
    # .   value: eu-west-1

    # Resources for the controller pod.
    resources:
        requests:
            cpu: 1
            memory: 1Gi
        limits:
            cpu: 1
            memory: 1Gi

    # Minimum event level to log; "" to use global logLevel.
    logLevel: ""

webhook:
    # Image to deploy.
    image: "public.ecr.aws/aws-node-termination-handler:v2.0.0-0.1"

    # Listen on port.
    port: 8443

    # Additional security context configuration for the controller pod.
    securityContext: {}

    # Environment variables.
    env: []
    # Example:
    #   - name: AWS_REGION
    # .   value: eu-west-1

    # Resources for the controller pod.
    resources:
        requests:
            cpu: 100m
            memory: 50Mi
        limits:
            cpu: 100m
            memory: 50Mi

    # Minimum event level to log; "" to use global logLevel.
    logLevel: ""
