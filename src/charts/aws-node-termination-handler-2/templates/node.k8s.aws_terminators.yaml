---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: terminators.node.k8s.aws
spec:
  group: node.k8s.aws
  names:
    kind: Terminator
    listKind: TerminatorList
    plural: terminators
    singular: terminator
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Terminator is the Schema for the terminators API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TerminatorSpec defines the desired state of Terminator
            type: object
            properties:
              sqs:
                description: AWS SQS queue configuration.
                type: object
                properties:
                  attributeNames:
                    description: |
                      A list of attributes that need to be returned along with each message. These
                      attributes include:

                        * All – Returns all values.

                        * ApproximateFirstReceiveTimestamp – Returns the time the message was
                          first received from the queue (epoch time (http://en.wikipedia.org/wiki/Unix_time)
                          in milliseconds).

                        * ApproximateReceiveCount – Returns the number of times a message has
                          been received across all queues but not deleted.

                        * AWSTraceHeader – Returns the AWS X-Ray trace header string.

                        * SenderId For an IAM user, returns the IAM user ID, for example ABCDEFGHI1JKLMNOPQ23R.
                          For an IAM role, returns the IAM role ID, for example ABCDE1F2GH3I4JK5LMNOP:i-a123b456.

                        * SentTimestamp – Returns the time the message was sent to the queue
                          (epoch time (http://en.wikipedia.org/wiki/Unix_time) in milliseconds).

                        * MessageDeduplicationId – Returns the value provided by the producer
                          that calls the SendMessage action.

                        * MessageGroupId – Returns the value provided by the producer that calls
                          the SendMessage action. Messages with the same MessageGroupId are returned
                          in sequence.

                        * SequenceNumber – Returns the value provided by Amazon SQS.
                    type: array
                    items:
                      type: string
                    {{- with .Values.terminator.defaults.sqs.attributeNames }}
                    default:
                      {{- toYaml . | nindent 22 }}
                    {{- end }}
                  maxNumberOfMessages:
                    description: |
                      The maximum number of messages to return. Amazon SQS never returns more messages
                      than this value (however, fewer messages might be returned). Valid values:
                      1 to 10.
                    type: integer
                    format: int64
                    {{- with .Values.terminator.defaults.sqs.maxNumberOfMessages }}
                    default: {{ . }}
                    {{- end }}
                  messageAttributeNames:
                    description: |
                      The name of the message attribute, where N is the index.

                        * The name can contain alphanumeric characters and the underscore (_),
                        hyphen (-), and period (.).

                        * The name is case-sensitive and must be unique among all attribute names
                          for the message.

                        * The name must not start with AWS-reserved prefixes such as AWS. or Amazon.
                          (or any casing variants).

                        * The name must not start or end with a period (.), and it should not
                          have periods in succession (..).

                        * The name can be up to 256 characters long.

                        When using ReceiveMessage, you can send a list of attribute names to receive,
                        or you can return all of the attributes by specifying All or .* in your request.
                        You can also use all message attributes starting with a prefix, for example
                        bar.*.
                    type: array
                    items:
                      type: string
                    {{- with .Values.terminator.defaults.sqs.messageAttributeNames }}
                    default:
                      {{- toYaml . | nindent 22 }}
                    {{- end }}
                  queueURL:
                    description: |
                      The URL of the Amazon SQS queue from which messages are received.

                        * Queue URLs and names are case-sensitive.

                        * QueueURL is a required field
                    type: string
                  visibilityTimeoutSeconds:
                    description: |
                      The duration (in seconds) that the received messages are hidden from subsequent
                      retrieve requests after being retrieved by a ReceiveMessage request.
                    type: integer
                    format: int64
                    {{- with .Values.terminator.defaults.sqs.visibilityTimeoutSeconds }}
                    default: {{ . }}
                    {{- end }}
                  waitTimeSeconds:
                    description: |
                      The duration (in seconds) for which the call waits for a message to arrive
                      in the queue before returning. If a message is available, the call returns
                      sooner than WaitTimeSeconds. If no messages are available and the wait time
                      expires, the call returns successfully with an empty list of messages.

                      To avoid HTTP errors, ensure that the HTTP response timeout for ReceiveMessage
                      requests is longer than the WaitTimeSeconds parameter. For example, with
                      the Java SDK, you can set HTTP transport settings using the NettyNioAsyncHttpClient
                      (https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/http/nio/netty/NettyNioAsyncHttpClient.html)
                      for asynchronous clients, or the ApacheHttpClient (https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/http/apache/ApacheHttpClient.html)
                      for synchronous clients.
                    type: integer
                    format: int64
                    {{- with .Values.terminator.defaults.sqs.waitTimeSeconds }}
                    default: {{ . }}
                    {{- end }}
              drain:
                description: TBD
                type: object
                properties:
                  force:
                    description: TBD
                    type: boolean
                    {{- with .Values.terminator.defaults.drain.force }}
                    default: {{ . }}
                    {{- end }}
                  gracePeriodSeconds:
                    description: |
                      Time to wait for a pod to terminate.

                        * A value of 0 will cause pods to be deleted immediately.

                        * A negative value will use the pod's terminationGracePeriodSeconds.
                    type: integer
                    {{- with .Values.terminator.defaults.drain.gracePeriodSeconds }}
                    default: {{ . }}
                    {{- end }}
                  ignoreAllDaemonSets:
                    description: Do not terminate pods managed by a daemon set.
                    type: boolean
                    {{- with .Values.terminator.defaults.drain.ignoreAllDaemonSets }}
                    default: {{ . }}
                    {{- end }}
                  deleteEmptyDirData:
                    description: Terminate pods using emptyDir. The local data will be deleted.
                    type: boolean
                    {{- with .Values.terminator.defaults.drain.deleteEmptyDirData }}
                    default: {{ . }}
                    {{- end }}
                  timeoutSeconds:
                    description: |
                      Time to wait for a "delete" command to complete.

                        * A value of 0 means to wait indefinitly.
                    type: integer
                    {{- with .Values.terminator.defaults.drain.timeoutSeconds }}
                    default: {{ . }}
                    {{- end }}
          status:
            description: TerminatorStatus defines the observed state of Terminator
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
