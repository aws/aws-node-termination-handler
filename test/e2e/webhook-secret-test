#!/bin/bash
set -euo pipefail

# Available env vars:
#   $TMP_DIR
#   $CLUSTER_NAME
#   $KUBECONFIG
#   $NODE_TERMINATION_HANDLER_DOCKER_REPO
#   $NODE_TERMINATION_HANDLER_DOCKER_TAG
#   $WEBHOOK_DOCKER_REPO
#   $WEBHOOK_DOCKER_TAG

echo "Starting Webhook URL Secret Test for Node Termination Handler"

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

WEBHOOKURL_LITERAL="webhookurl=http://localhost:$IMDS_PORT"

kubectl create secret -n kube-system generic webhooksecret --from-literal=$WEBHOOKURL_LITERAL

helm upgrade --install $CLUSTER_NAME-anth $SCRIPTPATH/../../config/helm/aws-node-termination-handler/ \
  --wait \
  --force \
  --namespace kube-system \
  --set instanceMetadataURL="http://$AEMM_URL:$IMDS_PORT" \
  --set image.repository="$NODE_TERMINATION_HANDLER_DOCKER_REPO" \
  --set image.tag="$NODE_TERMINATION_HANDLER_DOCKER_TAG" \
  --set webhookURLSecretName=webhooksecret \
  --set webhookTemplate="\{\"Content\":\"[NTH][Instance Interruption] InstanceId: \{\{ \.InstanceID \}\} - InstanceType: \{\{ \.InstanceType \}\} - Kind: \{\{ \.Kind \}\} - Start Time: \{\{ \.StartTime \}\}\"\}" \
  --set enableSpotInterruptionDraining="true" \
  --set enableScheduledEventDraining="true"

helm upgrade --install $CLUSTER_NAME-aemm $AEMM_DL_URL \
  --wait \
  --namespace default \
  --set servicePort="$IMDS_PORT"

helm upgrade --install $CLUSTER_NAME-emtp $SCRIPTPATH/../../config/helm/webhook-test-proxy/ \
  --wait \
  --force \
  --namespace default \
  --set webhookTestProxy.port="$IMDS_PORT"

TAINT_CHECK_CYCLES=15
TAINT_CHECK_SLEEP=15

DEPLOYED=0
for i in `seq 1 10`; do
    if [[ $(kubectl get deployments regular-pod-test -o jsonpath='{.status.unavailableReplicas}') -eq 0 ]]; then
        echo "✅ Verified regular-pod-test pod was scheduled and started!"
        DEPLOYED=1
        break
    fi
    sleep 5
done

if [[ $DEPLOYED -eq 0 ]]; then
    exit 2
fi

for i in `seq 1 $TAINT_CHECK_CYCLES`; do
      if kubectl get nodes $CLUSTER_NAME-worker | grep SchedulingDisabled; then
          echo "✅ Verified the worker node was cordoned!"
          NTH_POD_NAME=$(get_nth_worker_pod)
          if kubectl logs $NTH_POD_NAME -n kube-system | grep 'Webhook Success'; then
              echo "✅ Verified the webhook message was sent!"
              echo "✅ Webhook URL as a Secret Test Passed $CLUSTER_NAME! ✅"
              exit 0
          fi
      fi
    sleep $TAINT_CHECK_SLEEP
done

exit 1