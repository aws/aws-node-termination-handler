name: NTH Continuous Integration and Release

on: [push, pull_request, workflow_dispatch]

env:
  DEFAULT_GO_VERSION: ^1.15
  GITHUB_USERNAME: ${{ secrets.EC2_BOT_GITHUB_USERNAME }}
  GITHUB_TOKEN: ${{ secrets.EC2_BOT_GITHUB_TOKEN }}
  WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:

  fastTests:
    name: Fast Tests and Lints
    runs-on: ubuntu-20.04
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Unit Tests
      run: make unit-test
    
    - name: Lints
      run: make spellcheck shellcheck helm-lint

    - name: Go Report Card Tests
      run: make go-report-card-test

    - name: Generate K8s YAML
      run: make generate-k8s-yaml
  
  buildLinux:
    name: Build Linux Binaries
    runs-on: ubuntu-20.04
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Build Linux Binaries
      run: make build-binaries

  buildLinuxDocker:
    name: Build Linux Docker Images
    runs-on: ubuntu-20.04
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build Linux Docker Images
      run: make build-docker-images

  buildWindows:
    name: Build Windows Binaries
    runs-on: windows-2019
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build Windows Binaries
      run: choco install make && choco install zip && RefreshEnv.cmd && make build-binaries-windows

  buildWindowsDocker:
    name: Build Windows Docker Images
    runs-on: windows-2019
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build Windows Docker Images
      run: choco install make && RefreshEnv.cmd && make build-docker-images-windows

  e2e:
    name: E2E Tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        k8sVersion: [1.14, 1.15, 1.16, 1.17, 1.18, 1.19]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: E2E Tests
      run: test/k8s-local-cluster-test/run-test -v ${{ matrix.k8sVersion }}

  releaseLinux:
    name: Release Linux
    runs-on: ubuntu-20.04
    needs: [e2e, buildWindows, buildWindowsDocker, buildLinux, buildLinuxDocker, fastTests]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: License Check
      run: make license-test

    - name: Release Linux Assets
      run: make release

  releaseWindows:
    name: Release Windows
    runs-on: windows-2019
    needs: [e2e, buildWindows, buildWindowsDocker, buildLinux, buildLinuxDocker, fastTests]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Release Windows Assets
      run: choco install make && choco install zip && RefreshEnv.cmd && make release-windows

  release:
    name: Release
    runs-on: ubuntu-20.04
    needs: [releaseLinux, releaseWindows]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Create eks-charts PR
      run: make ekscharts-sync-release
    
    - name: Sync Readme to Dockerhub
      run: make sync-readme-to-dockerhub
    
    - name: Create NTH README Update PR
      run: make create-release-prep-pr-readme
