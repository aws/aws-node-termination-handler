name: NTH Continuous Integration and Release

on: [push, pull_request, workflow_dispatch]

env:
  DEFAULT_GO_VERSION: ^1.16
  GITHUB_USERNAME: ${{ secrets.EC2_BOT_GITHUB_USERNAME }}
  GITHUB_TOKEN: ${{ secrets.EC2_BOT_GITHUB_TOKEN }}
  WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  releaseLinux:
    name: Release Linux
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Release Linux Assets
      run: make release
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  releaseWindows:
    name: Release Windows
    runs-on: windows-2019
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Release Windows Assets
      run: choco install make && choco install zip && RefreshEnv.cmd && make release-windows
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  release:
    name: Release
    runs-on: ubuntu-20.04
    needs: [releaseLinux, releaseWindows]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Create eks-charts PR
      run: make ekscharts-sync-release
    
    - name: Sync Readme to Dockerhub
      run: make sync-readme-to-dockerhub

    - name: Sync Readme to ECR Public
      run: make sync-readme-to-ecr-public
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Create NTH README Update PR
      run: make create-release-prep-pr-readme
